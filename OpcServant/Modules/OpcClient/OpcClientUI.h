//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: OpcClientUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _MODULES_OPCCLIENT_OPCCLIENTUI_BASE_CLASSES_H
#define _MODULES_OPCCLIENT_OPCCLIENTUI_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/checkbox.h>
#include <wx/button.h>
#include <wx/dataview.h>
#include <wx/treectrl.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class OpcClientConfigurationDialogBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer3;
    wxFlexGridSizer* flexGridSizer24;
    wxStaticText* m_staticText13;
    wxTextCtrl* m_serverHost;
    wxStaticText* m_staticText17;
    wxTextCtrl* m_username;
    wxStaticText* m_staticText21;
    wxTextCtrl* m_password;
    wxCheckBox* m_useSecurity;
    wxCheckBox* m_enabled;
    wxBoxSizer* boxSizer44;
    wxButton* m_button46;
    wxButton* m_button48;
    wxTextCtrl* m_valueId;
    wxTextCtrl* m_browseItem;
    wxButton* m_button52;
    wxDataViewListCtrl* m_listCtl;
    wxStdDialogButtonSizer* m_stdBtnSizer5;
    wxButton* m_button7;
    wxButton* m_button9;

protected:
    virtual void onAdd(wxCommandEvent& event) { event.Skip(); }
    virtual void onRemove(wxCommandEvent& event) { event.Skip(); }
    virtual void onBrowse(wxCommandEvent& event) { event.Skip(); }
    virtual void onOk(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText13() { return m_staticText13; }
    wxTextCtrl* GetServerHost() { return m_serverHost; }
    wxStaticText* GetStaticText17() { return m_staticText17; }
    wxTextCtrl* GetUsername() { return m_username; }
    wxStaticText* GetStaticText21() { return m_staticText21; }
    wxTextCtrl* GetPassword() { return m_password; }
    wxCheckBox* GetUseSecurity() { return m_useSecurity; }
    wxCheckBox* GetEnabled() { return m_enabled; }
    wxButton* GetButton46() { return m_button46; }
    wxButton* GetButton48() { return m_button48; }
    wxTextCtrl* GetValueId() { return m_valueId; }
    wxTextCtrl* GetBrowseItem() { return m_browseItem; }
    wxButton* GetButton52() { return m_button52; }
    wxDataViewListCtrl* GetListCtl() { return m_listCtl; }
    OpcClientConfigurationDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Opc Client Configuration"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~OpcClientConfigurationDialogBase();
};


class ClientBrowserDialogBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer58;
    wxTreeCtrl* m_browseTree;
    wxStdDialogButtonSizer* m_stdBtnSizer62;
    wxButton* m_button64;
    wxButton* m_button66;

protected:
    virtual void onSelChanged(wxTreeEvent& event) { event.Skip(); }
    virtual void onOk(wxCommandEvent& event) { event.Skip(); }

public:
    wxTreeCtrl* GetBrowseTree() { return m_browseTree; }
    ClientBrowserDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Browser"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~ClientBrowserDialogBase();
};

#endif
