//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: NodeFlowUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _MODULES_NODEFLOW_NODEFLOWUI_BASE_CLASSES_H
#define _MODULES_NODEFLOW_NODEFLOWUI_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/filepicker.h>
#include <wx/button.h>
#include <wx/checkbox.h>
#include <wx/panel.h>
#include "NodeFlow/NodeFlow/NodeEditorPanel.h"
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class NodeFlowConfigurationBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer3;
    wxFlexGridSizer* flexGridSizer23;
    wxStaticText* m_Flow;
    wxFilePickerCtrl* m_flowList;
    wxButton* m_editFlow;
    wxCheckBox* m_enabled;
    wxStdDialogButtonSizer* m_stdBtnSizer11;
    wxButton* m_button13;
    wxButton* m_button15;

protected:
    virtual void onEdit(wxCommandEvent& event) { event.Skip(); }
    virtual void onOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetFlow() { return m_Flow; }
    wxFilePickerCtrl* GetFlowList() { return m_flowList; }
    wxButton* GetEditFlow() { return m_editFlow; }
    wxCheckBox* GetEnabled() { return m_enabled; }
    NodeFlowConfigurationBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Node Flow Configuration"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,200), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NodeFlowConfigurationBase();
};


class FlowEditorDialogBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer45;
    NodeEditorPanel* m_editorPanel;
    wxStdDialogButtonSizer* m_stdBtnSizer49;
    wxButton* m_button51;
    wxButton* m_button53;

protected:
    virtual void onOk(wxCommandEvent& event) { event.Skip(); }

public:
    NodeEditorPanel* GetEditorPanel() { return m_editorPanel; }
    FlowEditorDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Flow Editor"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX);
    virtual ~FlowEditorDialogBase();
};

#endif
