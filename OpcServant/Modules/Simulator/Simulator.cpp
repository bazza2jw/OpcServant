//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: Simulator.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "Simulator.h"


// Declare the bitmap loading function
extern void wxCrafteruUb9RrInitBitmapResources();

static bool bBitmapLoaded = false;


SimulatorConfigurationDialogBase::SimulatorConfigurationDialogBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafteruUb9RrInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    boxSizer3 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer3);
    
    gridBagSizer12 = new wxGridBagSizer(0, 0);
    
    boxSizer3->Add(gridBagSizer12, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText22 = new wxStaticText(this, wxID_ANY, _("Measure Interval"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    gridBagSizer12->Add(m_staticText22, wxGBPosition(0,0), wxGBSpan(1,1), wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_measureInterval = new wxSpinCtrl(this, wxID_ANY, wxT("0"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSP_ARROW_KEYS);
    m_measureInterval->SetRange(0, 100);
    m_measureInterval->SetValue(0);
    
    gridBagSizer12->Add(m_measureInterval, wxGBPosition(0,1), wxGBSpan(1,1), wxALL, WXC_FROM_DIP(5));
    
    m_staticText26 = new wxStaticText(this, wxID_ANY, _("Publish Interval"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    gridBagSizer12->Add(m_staticText26, wxGBPosition(1,0), wxGBSpan(1,1), wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_publishInterval = new wxSpinCtrl(this, wxID_ANY, wxT("0"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSP_ARROW_KEYS);
    m_publishInterval->SetRange(0, 100);
    m_publishInterval->SetValue(0);
    
    gridBagSizer12->Add(m_publishInterval, wxGBPosition(1,1), wxGBSpan(1,1), wxALL, WXC_FROM_DIP(5));
    
    m_staticText14 = new wxStaticText(this, wxID_ANY, _("Type"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    gridBagSizer12->Add(m_staticText14, wxGBPosition(2,0), wxGBSpan(1,1), wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    wxArrayString m_typeArr;
    m_typeArr.Add(wxT("Random"));
    m_typeArr.Add(wxT("Ramp"));
    m_type = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), m_typeArr, 0);
    
    gridBagSizer12->Add(m_type, wxGBPosition(2,1), wxGBSpan(1,1), wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText18 = new wxStaticText(this, wxID_ANY, _("Range"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    gridBagSizer12->Add(m_staticText18, wxGBPosition(3,0), wxGBSpan(1,1), wxALL|wxALIGN_CENTER_VERTICAL, WXC_FROM_DIP(5));
    
    m_range = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSP_ARROW_KEYS);
    m_range->SetRange(0, 100);
    m_range->SetValue(10);
    
    gridBagSizer12->Add(m_range, wxGBPosition(3,1), wxGBSpan(1,1), wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_enabled = new wxCheckBox(this, wxID_ANY, _("Enabled"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_enabled->SetValue(false);
    
    gridBagSizer12->Add(m_enabled, wxGBPosition(4,0), wxGBSpan(1,1), wxALL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer7 = new wxStdDialogButtonSizer();
    
    boxSizer3->Add(m_stdBtnSizer7, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button9 = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer7->AddButton(m_button9);
    
    m_button11 = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer7->AddButton(m_button11);
    m_stdBtnSizer7->Realize();
    
    SetName(wxT("SimulatorConfigurationDialogBase"));
    SetMinClientSize(wxSize(400,300));
    SetSize(400,300);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    m_button9->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SimulatorConfigurationDialogBase::OnOK), NULL, this);
    
}

SimulatorConfigurationDialogBase::~SimulatorConfigurationDialogBase()
{
    m_button9->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(SimulatorConfigurationDialogBase::OnOK), NULL, this);
    
}
