//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: HttpSendUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "HttpSendUI.h"


// Declare the bitmap loading function
extern void wxCrafterhtlM1hInitBitmapResources();

static bool bBitmapLoaded = false;


HttpSendSetupDialogBase::HttpSendSetupDialogBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterhtlM1hInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    boxSizer3 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer3);
    
    flexGridSizer5 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer5->SetFlexibleDirection( wxBOTH );
    flexGridSizer5->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5->AddGrowableCol(1);
    
    boxSizer3->Add(flexGridSizer5, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText51 = new wxStaticText(this, wxID_ANY, _("Host"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer5->Add(m_staticText51, 0, wxALL, WXC_FROM_DIP(5));
    
    m_host = new wxTextCtrl(this, wxID_ANY, wxT("localhost"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_host->SetHint(wxT(""));
    #endif
    
    flexGridSizer5->Add(m_host, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText55 = new wxStaticText(this, wxID_ANY, _("Port"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer5->Add(m_staticText55, 0, wxALL, WXC_FROM_DIP(5));
    
    m_port = new wxSpinCtrl(this, wxID_ANY, wxT("8080"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSP_ARROW_KEYS);
    m_port->SetRange(10, 10000);
    m_port->SetValue(8080);
    
    flexGridSizer5->Add(m_port, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText43 = new wxStaticText(this, wxID_ANY, _("URL Path"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer5->Add(m_staticText43, 0, wxALL, WXC_FROM_DIP(5));
    
    m_url = new wxTextCtrl(this, wxID_ANY, wxT("ScadaBR/httpds"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_url->SetHint(wxT(""));
    #endif
    
    flexGridSizer5->Add(m_url, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText47 = new wxStaticText(this, wxID_ANY, _("Filter"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer5->Add(m_staticText47, 0, wxALL, WXC_FROM_DIP(5));
    
    m_filter = new wxTextCtrl(this, wxID_ANY, wxT("*"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_filter->SetHint(wxT(""));
    #endif
    
    flexGridSizer5->Add(m_filter, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_enable = new wxCheckBox(this, wxID_ANY, _("Enabled"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    m_enable->SetValue(false);
    
    flexGridSizer5->Add(m_enable, 0, wxALL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer7 = new wxStdDialogButtonSizer();
    
    boxSizer3->Add(m_stdBtnSizer7, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button9 = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer7->AddButton(m_button9);
    
    m_button11 = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer7->AddButton(m_button11);
    m_stdBtnSizer7->Realize();
    
    SetName(wxT("HttpSendSetupDialogBase"));
    SetSize(300,400);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    m_button11->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(HttpSendSetupDialogBase::OnOk), NULL, this);
    
}

HttpSendSetupDialogBase::~HttpSendSetupDialogBase()
{
    m_button11->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(HttpSendSetupDialogBase::OnOk), NULL, this);
    
}
