//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: IOIFUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "IOIFUI.h"


// Declare the bitmap loading function
extern void wxCrafterTsCVPcInitBitmapResources();

static bool bBitmapLoaded = false;


IoifConfigurationDialogBase::IoifConfigurationDialogBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterTsCVPcInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    boxSizer3 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer3);
    
    flexGridSizer5 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer5->SetFlexibleDirection( wxBOTH );
    flexGridSizer5->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    boxSizer3->Add(flexGridSizer5, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText9 = new wxStaticText(this, wxID_ANY, _("Serial Interface"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer5->Add(m_staticText9, 0, wxALL, WXC_FROM_DIP(5));
    
    wxArrayString m_portArr;
    m_portArr.Add(wxT("ttyUSB0"));
    m_portArr.Add(wxT("ttyUSB1"));
    m_portArr.Add(wxT("ttyUSB2"));
    m_portArr.Add(wxT("ttyUSB3"));
    m_port = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), m_portArr, 0);
    m_port->SetSelection(0);
    
    flexGridSizer5->Add(m_port, 0, wxALL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer7 = new wxStdDialogButtonSizer();
    
    boxSizer3->Add(m_stdBtnSizer7, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button13 = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_button13->SetDefault();
    m_stdBtnSizer7->AddButton(m_button13);
    
    m_button15 = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer7->AddButton(m_button15);
    m_stdBtnSizer7->Realize();
    
    SetName(wxT("IoifConfigurationDialogBase"));
    SetSize(wxDLG_UNIT(this, wxSize(500,300)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

IoifConfigurationDialogBase::~IoifConfigurationDialogBase()
{
}

IoifDisplayBase::IoifDisplayBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterTsCVPcInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    boxSizer19 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer19);
    
    m_notebook21 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxBK_DEFAULT);
    m_notebook21->SetName(wxT("m_notebook21"));
    
    boxSizer19->Add(m_notebook21, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panel23 = new wxPanel(m_notebook21, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook21, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook21->AddPage(m_panel23, _("Analogue"), false);
    
    flexGridSizer29 = new wxFlexGridSizer(0, 4, 0, 0);
    flexGridSizer29->SetFlexibleDirection( wxBOTH );
    flexGridSizer29->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer29->AddGrowableCol(1);
    flexGridSizer29->AddGrowableCol(3);
    m_panel23->SetSizer(flexGridSizer29);
    
    m_staticText31 = new wxStaticText(m_panel23, wxID_ANY, _("IN0"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText31, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in0 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in0->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in0, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText35 = new wxStaticText(m_panel23, wxID_ANY, _("IN1"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText35, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in1 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in1->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in1, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText39 = new wxStaticText(m_panel23, wxID_ANY, _("IN2"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText39, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in2 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in2->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in2, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText43 = new wxStaticText(m_panel23, wxID_ANY, _("IN3"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText43, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in3 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in3->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in3, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText47 = new wxStaticText(m_panel23, wxID_ANY, _("IN4"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText47, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in4 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in4->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in4, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText51 = new wxStaticText(m_panel23, wxID_ANY, _("IN5"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText51, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in5 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in5->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in5, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText55 = new wxStaticText(m_panel23, wxID_ANY, _("IN6"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText55, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in6 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in6->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in6, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText59 = new wxStaticText(m_panel23, wxID_ANY, _("IN7"), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    
    flexGridSizer29->Add(m_staticText59, 0, wxALL, WXC_FROM_DIP(5));
    
    m_in7 = new wxTextCtrl(m_panel23, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel23, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_in7->SetHint(wxT(""));
    #endif
    
    flexGridSizer29->Add(m_in7, 0, wxALL, WXC_FROM_DIP(5));
    
    m_panel25 = new wxPanel(m_notebook21, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook21, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook21->AddPage(m_panel25, _("Relay"), false);
    
    gridSizer78 = new wxGridSizer(0, 2, 0, 0);
    m_panel25->SetSizer(gridSizer78);
    
    m_out0 = new wxToggleButton(m_panel25, wxID_ANY, _("OUT0"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    m_out0->SetValue(true);
    
    gridSizer78->Add(m_out0, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_out1 = new wxToggleButton(m_panel25, wxID_ANY, _("OUT1"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    m_out1->SetValue(true);
    
    gridSizer78->Add(m_out1, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_out2 = new wxToggleButton(m_panel25, wxID_ANY, _("OUT2"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    m_out2->SetValue(true);
    
    gridSizer78->Add(m_out2, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_out3 = new wxToggleButton(m_panel25, wxID_ANY, _("OUT3"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    m_out3->SetValue(true);
    
    gridSizer78->Add(m_out3, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_out4 = new wxToggleButton(m_panel25, wxID_ANY, _("OUT4"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    m_out4->SetValue(true);
    
    gridSizer78->Add(m_out4, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText84 = new wxStaticText(m_panel25, wxID_ANY, _("."), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    
    gridSizer78->Add(m_staticText84, 0, wxALL, WXC_FROM_DIP(5));
    
    m_allOff = new wxButton(m_panel25, wxID_ANY, _("All Off"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    
    gridSizer78->Add(m_allOff, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_allOn = new wxButton(m_panel25, wxID_ANY, _("All On"), wxDefaultPosition, wxDLG_UNIT(m_panel25, wxSize(-1,-1)), 0);
    
    gridSizer78->Add(m_allOn, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panel27 = new wxPanel(m_notebook21, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_notebook21, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    m_notebook21->AddPage(m_panel27, _("DAC"), false);
    
    flexGridSizer86 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer86->SetFlexibleDirection( wxBOTH );
    flexGridSizer86->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer86->AddGrowableCol(1);
    m_panel27->SetSizer(flexGridSizer86);
    
    m_staticText88 = new wxStaticText(m_panel27, wxID_ANY, _("Output"), wxDefaultPosition, wxDLG_UNIT(m_panel27, wxSize(-1,-1)), 0);
    
    flexGridSizer86->Add(m_staticText88, 0, wxALL, WXC_FROM_DIP(5));
    
    m_dacOutput = new wxTextCtrl(m_panel27, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel27, wxSize(-1,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_dacOutput->SetHint(wxT(""));
    #endif
    
    flexGridSizer86->Add(m_dacOutput, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText92 = new wxStaticText(m_panel27, wxID_ANY, _("Select"), wxDefaultPosition, wxDLG_UNIT(m_panel27, wxSize(-1,-1)), 0);
    
    flexGridSizer86->Add(m_staticText92, 0, wxALL, WXC_FROM_DIP(5));
    
    m_dacSelect = new wxSlider(m_panel27, wxID_ANY, 50, 0, 100, wxDefaultPosition, wxDLG_UNIT(m_panel27, wxSize(-1,-1)), wxSL_HORIZONTAL);
    
    flexGridSizer86->Add(m_dacSelect, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(m_notebook21)){
        wxPersistenceManager::Get().RegisterAndRestore(m_notebook21);
    } else {
        wxPersistenceManager::Get().Restore(m_notebook21);
    }
    #endif
    
    SetName(wxT("IoifDisplayBase"));
    SetSize(wxDLG_UNIT(this, wxSize(500,300)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    m_out0->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOUT0), NULL, this);
    m_out1->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut1), NULL, this);
    m_out2->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut2), NULL, this);
    m_out3->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut3), NULL, this);
    m_out4->Connect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut4), NULL, this);
    m_allOff->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onAllOff), NULL, this);
    m_allOn->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onAllOn), NULL, this);
    m_dacSelect->Connect(wxEVT_SCROLL_CHANGED, wxScrollEventHandler(IoifDisplayBase::onDacChanged), NULL, this);
    
}

IoifDisplayBase::~IoifDisplayBase()
{
    m_out0->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOUT0), NULL, this);
    m_out1->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut1), NULL, this);
    m_out2->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut2), NULL, this);
    m_out3->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut3), NULL, this);
    m_out4->Disconnect(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onOut4), NULL, this);
    m_allOff->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onAllOff), NULL, this);
    m_allOn->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(IoifDisplayBase::onAllOn), NULL, this);
    m_dacSelect->Disconnect(wxEVT_SCROLL_CHANGED, wxScrollEventHandler(IoifDisplayBase::onDacChanged), NULL, this);
    
}
