<?xml version="1.0" ?>

<!-- Created by: Francesco Montorsi <frm@users.sourceforge.net>     -->
<!-- Creation date: 9/10/2004                                       -->
<!-- RCS-ID: $Id: targets.bkl,v 1.11 2005/11/06 21:14:28 frm Exp $   -->

<makefile>
    <if cond="not isdefined('WXCODE_TARGETS_INC')">
    <set var="WXCODE_TARGETS_INC">1</set>
    <using module="datafiles"/>

    <!--                                               -->
    <!--               OPTIONAL TARGETS                -->
    <!--                                               -->
    <if cond="FORMAT!='msvc6prj'">

        <if cond="COMP_WANT_TARBALL_TARGET=='1'">
            <cd-and-run id="tarball">
                <cd>$(COMP_BASEPATH)</cd>
                
                <!-- Use a generic name since we don't know what this tarball contains
                 (i.e. only sources or sources + lib ...) -->
                <run-tarball>$(COMP_NAME).tar.gz</run-tarball>
            </cd-and-run>
        </if>
        
        <if cond="COMP_WANT_ZIP_TARGET=='1'">
            <cd-and-run id="zip">
                <!-- See http://www.info-zip.org/Zip.html for this free utility -->
                <cd>$(COMP_BASEPATH)</cd>
                <run-zip>$(COMP_NAME).zip</run-zip>
            </cd-and-run>
        </if>
        
        <if cond="COMP_WANT_CLEANALL_TARGET=='1'">
            <action id="deepclean">
                <!-- Remove the BUILDDIRectories for all formats -->
                <rmintfiles>$(COMP_BASEPATH)</rmintfiles>
                <rmintfiles>.</rmintfiles>
            </action>
        </if>

        <if cond="COMP_WANT_DOXYGEN_DOCS_TARGET=='1'">  
            <cd-and-run id="docs">
                <cd>$(COMP_BASEPATH)$(DIRSEP)docs</cd>
                <run>doxygen</run>
            </cd-and-run>
        </if>
        
        <if cond="COMP_WANT_DOXYGEN_CLEANDOCS_TARGET=='1'">
            <action id="cleandocs">
                <rmdir>$(COMP_BASEPATH)$(DIRSEP)docs$(DIRSEP)html</rmdir>
            </action>
        </if>

        <if cond="COMP_WANT_INSTALL_TARGET=='1'">

            <!-- on win32, the "install" target does not exist by default -->
            <if cond="TARGETING_WIN32=='1'">
                <action id="install" template="__phony">
                    <depends>all</depends>
                </action>
            </if>


            <!-- "make install-headers": -->
            <if cond="COMP_WANT_INSTALL_NONWXHEADERS_TARGET=='1'">
              <data-files-tg id="install-headers">
                  <files>$(COMP_BASEPATH)$(DIRSEP)include$(DIRSEP)*.h</files>
                  <if cond="TARGETING_WIN32=='1'">
                      <install-to>$(WX_DIR)$(DIRSEP)include</install-to>

                      <!-- little hack over "data-files-tg" which is truly defined only on unix -->
                      <set var="__copy_cmd" eval="0">
                          mkdir $(__dstdir)
                          cd $(__srcdir)
                          copy /Y $(__files) $(__dstdir)
                      </set>
                      <dependency-of>install</dependency-of>
                      <command>$(__copy_cmd)</command>
                  </if>
                  <if cond="TARGETING_WIN32=='0'">
                      <install-to>$(INCLUDEDIR)</install-to>
                  </if>
              </data-files-tg>
            </if>

            <!-- "make install-wxheaders": -->
            <if cond="COMP_WANT_INSTALL_WXHEADERS_TARGET=='1'">
              <data-files-tg id="install-wxheaders">
                  <files>$(COMP_BASEPATH)$(DIRSEP)include$(DIRSEP)wx$(DIRSEP)*.h</files>
                  <if cond="TARGETING_WIN32=='1'">
                      <install-to>$(WX_DIR)$(DIRSEP)include$(DIRSEP)wx</install-to>

                      <!-- little hack over "data-files-tg" which is truly defined only on unix -->
                      <set var="__copy_cmd" eval="0">
                          mkdir $(__dstdir)
                          cd $(__srcdir)
                          copy /Y $(__files) $(__dstdir)
                      </set>
                      <dependency-of>install</dependency-of>
                      <command>$(__copy_cmd)</command>
                  </if>
                  <if cond="TARGETING_WIN32=='0'">
                      <install-to>$(INCLUDEDIR)/wx</install-to>
                  </if>
              </data-files-tg>
            </if>
        
        </if>

        <if cond="COMP_WANT_UNINSTALL_TARGET=='1'">

            <!-- on win32, the "uninstall" target does not exist by default -->
            <if cond="TARGETING_WIN32=='1'">
                <action id="uninstall" template="__phony"/>
            </if>

            <!-- "make uninstall": -->
            <if cond="COMP_WANT_UNINSTALL_WXHEADERS_TARGET=='1'">             
                <modify-target target="uninstall">
                    <if cond="TARGETING_WIN32=='1'">
                        <!-- on unix, we use the default dir for <rmheaders> -->
                        <set-rmheaders-dir>$(WX_DIR)$(DIRSEP)include</set-rmheaders-dir>
                    </if>
                    <rmheaders>$(COMP_HDR)</rmheaders>                  
                </modify-target>
            </if>
            <modify-target target="uninstall">

                <!-- in this way we remove all files related to this component (.so, .lib, .a, etc) -->
                <if cond="TARGETING_WIN32=='1'">
                    <rmfile>$(WX_DIR)$(WXLIBPATH)$(DIRSEP)*$(COMP_NAME)*</rmfile>
                </if>
                <if cond="TARGETING_WIN32=='0'">
                    <rmfile>$(LIBDIR)$(DIRSEP)*$(COMP_NAME)*</rmfile>
                </if>
            </modify-target>            
        </if>    
    </if>       <!-- FORMAT!='msvc6prj' -->

    </if>
</makefile>
