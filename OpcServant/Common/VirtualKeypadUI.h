//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: VirtualKeypadUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _OPCSERVANT_COMMON_VIRTUALKEYPADUI_BASE_CLASSES_H
#define _OPCSERVANT_COMMON_VIRTUALKEYPADUI_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/textctrl.h>
#include <wx/button.h>
#include <wx/imaglist.h>
#include <wx/bitmap.h>
#include <map>
#include <wx/icon.h>
#include <wx/panel.h>
#include <wx/stattext.h>
#include <wx/tglbtn.h>
#include "sliderswitch.h"
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class VirtualKeypadBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer3;
    wxFlexGridSizer* flexGridSizer7;
    wxTextCtrl* m_textEntry;
    wxButton* m_button13;
    wxGridSizer* gridSizer5;
    wxButton* m_button37123;
    wxButton* m_button3712;
    wxButton* m_button371;
    wxButton* m_button37456;
    wxButton* m_button3745;
    wxButton* m_button374;
    wxButton* m_button3778910;
    wxButton* m_button37789;
    wxButton* m_button3778;
    wxButton* m_button37711;
    wxButton* m_button377;
    wxButton* m_button37;
    wxGridSizer* gridSizer9;
    wxButton* m_button50;
    wxButton* m_button54;

protected:
    virtual void onBack(wxCommandEvent& event) { event.Skip(); }
    virtual void on_1(wxCommandEvent& event) { event.Skip(); }
    virtual void on_2(wxCommandEvent& event) { event.Skip(); }
    virtual void on_3(wxCommandEvent& event) { event.Skip(); }
    virtual void on_4(wxCommandEvent& event) { event.Skip(); }
    virtual void on_5(wxCommandEvent& event) { event.Skip(); }
    virtual void on_6(wxCommandEvent& event) { event.Skip(); }
    virtual void on_7(wxCommandEvent& event) { event.Skip(); }
    virtual void on_8(wxCommandEvent& event) { event.Skip(); }
    virtual void on_9(wxCommandEvent& event) { event.Skip(); }
    virtual void on_dp(wxCommandEvent& event) { event.Skip(); }
    virtual void on_0(wxCommandEvent& event) { event.Skip(); }
    virtual void on_minus(wxCommandEvent& event) { event.Skip(); }
    virtual void onOK(wxCommandEvent& event) { event.Skip(); }
    virtual void onCancel(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetTextEntry() { return m_textEntry; }
    wxButton* GetButton13() { return m_button13; }
    wxButton* GetButton37123() { return m_button37123; }
    wxButton* GetButton3712() { return m_button3712; }
    wxButton* GetButton371() { return m_button371; }
    wxButton* GetButton37456() { return m_button37456; }
    wxButton* GetButton3745() { return m_button3745; }
    wxButton* GetButton374() { return m_button374; }
    wxButton* GetButton3778910() { return m_button3778910; }
    wxButton* GetButton37789() { return m_button37789; }
    wxButton* GetButton3778() { return m_button3778; }
    wxButton* GetButton37711() { return m_button37711; }
    wxButton* GetButton377() { return m_button377; }
    wxButton* GetButton37() { return m_button37; }
    wxButton* GetButton50() { return m_button50; }
    wxButton* GetButton54() { return m_button54; }
    VirtualKeypadBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Keypad"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,500), long style = wxCAPTION|wxRESIZE_BORDER|wxCLOSE_BOX|wxBORDER_SIMPLE);
    virtual ~VirtualKeypadBase();
};


class ButtonImages : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ButtonImages();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ButtonImages();
};


class VkTextControlBase : public wxPanel
{
protected:
    wxFlexGridSizer* flexGridSizer63;
    wxTextCtrl* m_text;
    wxButton* m_button67;

protected:
    virtual void onOpen(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetText() { return m_text; }
    wxButton* GetButton67() { return m_button67; }
    VkTextControlBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~VkTextControlBase();
};


class VKeyboardPanelBase : public wxPanel
{
protected:
    wxBoxSizer* boxSizer71;
    wxBoxSizer* boxSizer75;
    wxTextCtrl* m_textEntry;
    wxButton* m_button81;
    wxGridSizer* gridSizer77;
    wxButton* n_key1;
    wxButton* m_key2;
    wxButton* m_key3;
    wxButton* m_key4;
    wxButton* m_key5;
    wxButton* m_key6;
    wxButton* m_key7;
    wxButton* m_key8;
    wxButton* m_key9;
    wxButton* m_key0;
    wxButton* m_keyA;
    wxButton* m_keyB;
    wxButton* m_keyC;
    wxButton* m_keyD;
    wxButton* m_keyE;
    wxButton* m_keyF;
    wxButton* m_keyG;
    wxButton* m_keyH;
    wxButton* m_keyI;
    wxButton* m_keyJ;
    wxButton* m_keyK;
    wxButton* m_keyL;
    wxButton* m_keyM;
    wxButton* m_keyN;
    wxButton* m_keyO;
    wxButton* m_keyP;
    wxButton* m_keyQ;
    wxButton* m_keyR;
    wxButton* m_keyS;
    wxButton* m_keyT;
    wxButton* m_keyU;
    wxButton* m_keyV;
    wxButton* m_keyW;
    wxButton* m_keyX;
    wxButton* m_keyY;
    wxButton* m_keyZ;
    wxButton* m_keyDot;
    wxButton* m_keyMinus;
    wxButton* m_keyUS;
    wxButton* m_keySlash;
    wxGridSizer* gridSizer227;
    wxButton* m_space;

protected:
    virtual void onDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void onChar(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetTextEntry() { return m_textEntry; }
    wxButton* GetButton81() { return m_button81; }
    wxButton* GetN_key1() { return n_key1; }
    wxButton* GetKey2() { return m_key2; }
    wxButton* GetKey3() { return m_key3; }
    wxButton* GetKey4() { return m_key4; }
    wxButton* GetKey5() { return m_key5; }
    wxButton* GetKey6() { return m_key6; }
    wxButton* GetKey7() { return m_key7; }
    wxButton* GetKey8() { return m_key8; }
    wxButton* GetKey9() { return m_key9; }
    wxButton* GetKey0() { return m_key0; }
    wxButton* GetKeyA() { return m_keyA; }
    wxButton* GetKeyB() { return m_keyB; }
    wxButton* GetKeyC() { return m_keyC; }
    wxButton* GetKeyD() { return m_keyD; }
    wxButton* GetKeyE() { return m_keyE; }
    wxButton* GetKeyF() { return m_keyF; }
    wxButton* GetKeyG() { return m_keyG; }
    wxButton* GetKeyH() { return m_keyH; }
    wxButton* GetKeyI() { return m_keyI; }
    wxButton* GetKeyJ() { return m_keyJ; }
    wxButton* GetKeyK() { return m_keyK; }
    wxButton* GetKeyL() { return m_keyL; }
    wxButton* GetKeyM() { return m_keyM; }
    wxButton* GetKeyN() { return m_keyN; }
    wxButton* GetKeyO() { return m_keyO; }
    wxButton* GetKeyP() { return m_keyP; }
    wxButton* GetKeyQ() { return m_keyQ; }
    wxButton* GetKeyR() { return m_keyR; }
    wxButton* GetKeyS() { return m_keyS; }
    wxButton* GetKeyT() { return m_keyT; }
    wxButton* GetKeyU() { return m_keyU; }
    wxButton* GetKeyV() { return m_keyV; }
    wxButton* GetKeyW() { return m_keyW; }
    wxButton* GetKeyX() { return m_keyX; }
    wxButton* GetKeyY() { return m_keyY; }
    wxButton* GetKeyZ() { return m_keyZ; }
    wxButton* GetKeyDot() { return m_keyDot; }
    wxButton* GetKeyMinus() { return m_keyMinus; }
    wxButton* GetKeyUS() { return m_keyUS; }
    wxButton* GetKeySlash() { return m_keySlash; }
    wxButton* GetSpace() { return m_space; }
    VKeyboardPanelBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(700,400), long style = wxTAB_TRAVERSAL);
    virtual ~VKeyboardPanelBase();
};


class TextSpinBase : public wxPanel
{
protected:
    wxBoxSizer* boxSizer499;
    wxTextCtrl* m_text;
    wxButton* m_up;
    wxButton* m_down;

protected:
    virtual void onUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onDown(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetText() { return m_text; }
    wxButton* GetUp() { return m_up; }
    wxButton* GetDown() { return m_down; }
    TextSpinBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,64), long style = wxTAB_TRAVERSAL);
    virtual ~TextSpinBase();
};


class ToggleOptionBase : public wxPanel
{
protected:
    wxFlexGridSizer* flexGridSizer257;
    wxStaticText* m_label;
    SliderSwitch* m_button;

protected:

public:
    wxStaticText* GetLabel() { return m_label; }
    SliderSwitch* GetButton() { return m_button; }
    ToggleOptionBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(300,64), long style = wxTAB_TRAVERSAL);
    virtual ~ToggleOptionBase();
};


class VirtualKeypadTimeBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer31;
    wxFlexGridSizer* flexGridSizer72;
    wxTextCtrl* m_hour;
    wxStaticText* m_staticText324;
    wxTextCtrl* m_minute;
    wxStaticText* m_staticText328;
    wxTextCtrl* m_second;
    wxFlexGridSizer* flexGridSizer482;
    wxButton* m_buttonHoursUp;
    wxButton* m_buttonHoursDown;
    wxStaticText* m_staticText488;
    wxButton* m_buttonMinUp;
    wxButton* m_buttonMinDown;
    wxStaticText* m_staticText494;
    wxButton* m_buttonSecUp;
    wxButton* m_buttonSecDown;
    wxGridSizer* gridSizer918;
    wxButton* m_button5019;
    wxButton* m_button5421;

protected:
    virtual void onHourUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onHourDown(wxCommandEvent& event) { event.Skip(); }
    virtual void onMinUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onMinDown(wxCommandEvent& event) { event.Skip(); }
    virtual void onSecUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onSecDown(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetHour() { return m_hour; }
    wxStaticText* GetStaticText324() { return m_staticText324; }
    wxTextCtrl* GetMinute() { return m_minute; }
    wxStaticText* GetStaticText328() { return m_staticText328; }
    wxTextCtrl* GetSecond() { return m_second; }
    wxButton* GetButtonHoursUp() { return m_buttonHoursUp; }
    wxButton* GetButtonHoursDown() { return m_buttonHoursDown; }
    wxStaticText* GetStaticText488() { return m_staticText488; }
    wxButton* GetButtonMinUp() { return m_buttonMinUp; }
    wxButton* GetButtonMinDown() { return m_buttonMinDown; }
    wxStaticText* GetStaticText494() { return m_staticText494; }
    wxButton* GetButtonSecUp() { return m_buttonSecUp; }
    wxButton* GetButtonSecDown() { return m_buttonSecDown; }
    wxButton* GetButton5019() { return m_button5019; }
    wxButton* GetButton5421() { return m_button5421; }
    VirtualKeypadTimeBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Time Entry"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxCAPTION|wxRESIZE_BORDER|wxCLOSE_BOX|wxBORDER_SIMPLE);
    virtual ~VirtualKeypadTimeBase();
};


class VirtualKeypadDateBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer3122;
    wxFlexGridSizer* flexGridSizer7223;
    wxTextCtrl* m_year;
    wxStaticText* m_staticText330;
    wxTextCtrl* m_month;
    wxStaticText* m_staticText332;
    wxTextCtrl* m_day;
    wxStaticText* m_staticText334;
    wxStaticText* m_staticText336;
    wxStaticText* m_staticText338;
    wxFlexGridSizer* flexGridSizer464;
    wxButton* m_buttonYearUp;
    wxButton* m_buttonYearDown;
    wxStaticText* m_staticText470;
    wxButton* m_buttonMonthUp;
    wxButton* m_buttonMonthDown;
    wxStaticText* m_staticText476;
    wxButton* m_buttonDayUp;
    wxButton* m_buttonDayDown;
    wxGridSizer* gridSizer91838;
    wxButton* m_button501939;
    wxButton* m_button542141;

protected:
    virtual void onYearUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onYearDown(wxCommandEvent& event) { event.Skip(); }
    virtual void onMonthUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onMonthDown(wxCommandEvent& event) { event.Skip(); }
    virtual void onDayUp(wxCommandEvent& event) { event.Skip(); }
    virtual void onDayDown(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetYear() { return m_year; }
    wxStaticText* GetStaticText330() { return m_staticText330; }
    wxTextCtrl* GetMonth() { return m_month; }
    wxStaticText* GetStaticText332() { return m_staticText332; }
    wxTextCtrl* GetDay() { return m_day; }
    wxStaticText* GetStaticText334() { return m_staticText334; }
    wxStaticText* GetStaticText336() { return m_staticText336; }
    wxStaticText* GetStaticText338() { return m_staticText338; }
    wxButton* GetButtonYearUp() { return m_buttonYearUp; }
    wxButton* GetButtonYearDown() { return m_buttonYearDown; }
    wxStaticText* GetStaticText470() { return m_staticText470; }
    wxButton* GetButtonMonthUp() { return m_buttonMonthUp; }
    wxButton* GetButtonMonthDown() { return m_buttonMonthDown; }
    wxStaticText* GetStaticText476() { return m_staticText476; }
    wxButton* GetButtonDayUp() { return m_buttonDayUp; }
    wxButton* GetButtonDayDown() { return m_buttonDayDown; }
    wxButton* GetButton501939() { return m_button501939; }
    wxButton* GetButton542141() { return m_button542141; }
    VirtualKeypadDateBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Date Entry"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxCAPTION|wxRESIZE_BORDER|wxCLOSE_BOX|wxBORDER_SIMPLE);
    virtual ~VirtualKeypadDateBase();
};


class VTextEntryDialogBase : public wxDialog
{
protected:
    wxBoxSizer* boxSizer711;
    wxBoxSizer* boxSizer752;
    wxTextCtrl* m_textEntry;
    wxButton* m_button814;
    wxGridSizer* gridSizer775;
    wxButton* n_key16;
    wxButton* m_key27;
    wxButton* m_key38;
    wxButton* m_key49;
    wxButton* m_key510;
    wxButton* m_key611;
    wxButton* m_key712;
    wxButton* m_key813;
    wxButton* m_key914;
    wxButton* m_key015;
    wxButton* m_keyA16;
    wxButton* m_keyB17;
    wxButton* m_keyC18;
    wxButton* m_keyD19;
    wxButton* m_keyE20;
    wxButton* m_keyF21;
    wxButton* m_keyG22;
    wxButton* m_keyH23;
    wxButton* m_keyI24;
    wxButton* m_keyJ25;
    wxButton* m_keyK26;
    wxButton* m_keyL27;
    wxButton* m_keyM28;
    wxButton* m_keyN29;
    wxButton* m_keyO30;
    wxButton* m_keyP31;
    wxButton* m_keyQ32;
    wxButton* m_keyR33;
    wxButton* m_keyS34;
    wxButton* m_keyT35;
    wxButton* m_keyU36;
    wxButton* m_keyV37;
    wxButton* m_keyW38;
    wxButton* m_keyX39;
    wxButton* m_keyY40;
    wxButton* m_keyZ41;
    wxButton* m_keyDot42;
    wxButton* m_keyMinus43;
    wxButton* m_keyUS44;
    wxButton* m_keySlash45;
    wxGridSizer* gridSizer22746;
    wxButton* m_space47;
    wxButton* m_button460;
    wxButton* m_button462;

protected:
    virtual void onDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void onChar(wxCommandEvent& event) { event.Skip(); }
    virtual void onCancel(wxCommandEvent& event) { event.Skip(); }
    virtual void onOK(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetTextEntry() { return m_textEntry; }
    wxButton* GetButton814() { return m_button814; }
    wxButton* GetN_key16() { return n_key16; }
    wxButton* GetKey27() { return m_key27; }
    wxButton* GetKey38() { return m_key38; }
    wxButton* GetKey49() { return m_key49; }
    wxButton* GetKey510() { return m_key510; }
    wxButton* GetKey611() { return m_key611; }
    wxButton* GetKey712() { return m_key712; }
    wxButton* GetKey813() { return m_key813; }
    wxButton* GetKey914() { return m_key914; }
    wxButton* GetKey015() { return m_key015; }
    wxButton* GetKeyA16() { return m_keyA16; }
    wxButton* GetKeyB17() { return m_keyB17; }
    wxButton* GetKeyC18() { return m_keyC18; }
    wxButton* GetKeyD19() { return m_keyD19; }
    wxButton* GetKeyE20() { return m_keyE20; }
    wxButton* GetKeyF21() { return m_keyF21; }
    wxButton* GetKeyG22() { return m_keyG22; }
    wxButton* GetKeyH23() { return m_keyH23; }
    wxButton* GetKeyI24() { return m_keyI24; }
    wxButton* GetKeyJ25() { return m_keyJ25; }
    wxButton* GetKeyK26() { return m_keyK26; }
    wxButton* GetKeyL27() { return m_keyL27; }
    wxButton* GetKeyM28() { return m_keyM28; }
    wxButton* GetKeyN29() { return m_keyN29; }
    wxButton* GetKeyO30() { return m_keyO30; }
    wxButton* GetKeyP31() { return m_keyP31; }
    wxButton* GetKeyQ32() { return m_keyQ32; }
    wxButton* GetKeyR33() { return m_keyR33; }
    wxButton* GetKeyS34() { return m_keyS34; }
    wxButton* GetKeyT35() { return m_keyT35; }
    wxButton* GetKeyU36() { return m_keyU36; }
    wxButton* GetKeyV37() { return m_keyV37; }
    wxButton* GetKeyW38() { return m_keyW38; }
    wxButton* GetKeyX39() { return m_keyX39; }
    wxButton* GetKeyY40() { return m_keyY40; }
    wxButton* GetKeyZ41() { return m_keyZ41; }
    wxButton* GetKeyDot42() { return m_keyDot42; }
    wxButton* GetKeyMinus43() { return m_keyMinus43; }
    wxButton* GetKeyUS44() { return m_keyUS44; }
    wxButton* GetKeySlash45() { return m_keySlash45; }
    wxButton* GetSpace47() { return m_space47; }
    wxButton* GetButton460() { return m_button460; }
    wxButton* GetButton462() { return m_button462; }
    VTextEntryDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Text Entry"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxCAPTION|wxRESIZE_BORDER|wxCLOSE_BOX);
    virtual ~VTextEntryDialogBase();
};

#endif
