//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: OsClientUI.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "OsClientUI.h"


// Declare the bitmap loading function
extern void wxCrafterNXOsRkInitBitmapResources();

static bool bBitmapLoaded = false;


OpcClientMainFrameBase::OpcClientMainFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCrafterNXOsRkInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    boxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    this->SetSizer(boxSizer3);
    
    m_listbook11 = new wxListbook(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxLB_TOP|wxBK_DEFAULT);
    m_listbook11->SetName(wxT("m_listbook11"));
    wxImageList* m_listbook11_il = new wxImageList(48, 48);
    m_listbook11->AssignImageList(m_listbook11_il);
    
    boxSizer3->Add(m_listbook11, 3, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panelStatus = new wxPanel(m_listbook11, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_listbook11, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    int m_panelStatusImgIndex;
    m_panelStatusImgIndex = m_listbook11_il->Add(wxXmlResource::Get()->LoadBitmap(wxT("dispcalGUI-testchart-editor")));
    m_listbook11->AddPage(m_panelStatus, _("Status"), true, m_panelStatusImgIndex);
    
    boxSizer29 = new wxBoxSizer(wxVERTICAL);
    m_panelStatus->SetSizer(boxSizer29);
    
    m_statusGrid = new wxGrid(m_panelStatus, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panelStatus, wxSize(-1,-1)), wxWANTS_CHARS);
    m_statusGrid->CreateGrid(0, 0);
    m_statusGrid->SetRowLabelAlignment(wxALIGN_RIGHT, wxALIGN_CENTRE);
    m_statusGrid->SetColLabelAlignment(wxALIGN_CENTRE, wxALIGN_CENTRE);
    #if wxVERSION_NUMBER >= 2904
    m_statusGrid->UseNativeColHeader(true);
    #endif
    m_statusGrid->EnableEditing(false);
    
    boxSizer29->Add(m_statusGrid, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panelPlan = new wxPanel(m_listbook11, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_listbook11, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    int m_panelPlanImgIndex;
    m_panelPlanImgIndex = m_listbook11_il->Add(wxXmlResource::Get()->LoadBitmap(wxT("icon_map")));
    m_listbook11->AddPage(m_panelPlan, _("Plan"), false, m_panelPlanImgIndex);
    
    boxSizer33 = new wxBoxSizer(wxVERTICAL);
    m_panelPlan->SetSizer(boxSizer33);
    
    m_panel124 = new wxPanel(m_panelPlan, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panelPlan, wxSize(-1,-1)), wxTAB_TRAVERSAL|wxBORDER_SUNKEN);
    
    boxSizer33->Add(m_panel124, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panelReports = new wxPanel(m_listbook11, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_listbook11, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    int m_panelReportsImgIndex;
    m_panelReportsImgIndex = m_listbook11_il->Add(wxXmlResource::Get()->LoadBitmap(wxT("pcp-gui")));
    m_listbook11->AddPage(m_panelReports, _("Reports"), false, m_panelReportsImgIndex);
    
    boxSizer39 = new wxBoxSizer(wxVERTICAL);
    m_panelReports->SetSizer(boxSizer39);
    
    m_panel41 = new wxPanel(m_panelReports, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panelReports, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer39->Add(m_panel41, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    boxSizer43 = new wxBoxSizer(wxHORIZONTAL);
    m_panel41->SetSizer(boxSizer43);
    
    boxSizer82 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer43->Add(boxSizer82, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxArrayString m_listReportsArr;
    m_listReports = new wxListBox(m_panel41, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel41, wxSize(-1,-1)), m_listReportsArr, wxLB_SINGLE);
    
    boxSizer82->Add(m_listReports, 5, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    gridSizer84 = new wxGridSizer(0, 2, 0, 0);
    
    boxSizer82->Add(gridSizer84, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_buttonNewReport = new wxButton(m_panel41, wxID_ANY, _("New ..."), wxDefaultPosition, wxDLG_UNIT(m_panel41, wxSize(-1,-1)), 0);
    
    gridSizer84->Add(m_buttonNewReport, 0, wxALL, WXC_FROM_DIP(5));
    
    m_buttonRemoveReport = new wxButton(m_panel41, wxID_ANY, _("Remove ..."), wxDefaultPosition, wxDLG_UNIT(m_panel41, wxSize(-1,-1)), 0);
    
    gridSizer84->Add(m_buttonRemoveReport, 0, wxALL, WXC_FROM_DIP(5));
    
    m_panel47 = new wxPanel(m_panel41, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel41, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer43->Add(m_panel47, 3, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    boxSizer52 = new wxBoxSizer(wxVERTICAL);
    m_panel47->SetSizer(boxSizer52);
    
    flexGridSizer54 = new wxFlexGridSizer(0, 3, 0, 0);
    flexGridSizer54->SetFlexibleDirection( wxBOTH );
    flexGridSizer54->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    boxSizer52->Add(flexGridSizer54, 2, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText66 = new wxStaticText(m_panel47, wxID_ANY, _("From"), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    flexGridSizer54->Add(m_staticText66, 0, wxALL, WXC_FROM_DIP(5));
    
    m_timeFrom = new wxTimePickerCtrl(m_panel47, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), wxTP_DEFAULT);
    
    flexGridSizer54->Add(m_timeFrom, 0, wxALL, WXC_FROM_DIP(5));
    
    m_dateFrom = new wxDatePickerCtrl(m_panel47, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), wxDP_DEFAULT);
    
    flexGridSizer54->Add(m_dateFrom, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText72 = new wxStaticText(m_panel47, wxID_ANY, _("To"), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    flexGridSizer54->Add(m_staticText72, 0, wxALL, WXC_FROM_DIP(5));
    
    m_timeTo = new wxTimePickerCtrl(m_panel47, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), wxTP_DEFAULT);
    
    flexGridSizer54->Add(m_timeTo, 0, wxALL, WXC_FROM_DIP(5));
    
    m_dateTo = new wxDatePickerCtrl(m_panel47, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), wxDP_DEFAULT);
    
    flexGridSizer54->Add(m_dateTo, 0, wxALL, WXC_FROM_DIP(5));
    
    boxSizer112 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer52->Add(boxSizer112, 3, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_selectedDataSource = new wxDataViewListCtrl(m_panel47, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), wxDV_ROW_LINES|wxDV_SINGLE);
    
    boxSizer112->Add(m_selectedDataSource, 3, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_selectedDataSource->AppendTextColumn(_("Data Source"), wxDATAVIEW_CELL_INERT, WXC_FROM_DIP(-2), wxALIGN_LEFT);
    boxSizer118 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer112->Add(boxSizer118, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_buttonAddReportDataSource = new wxButton(m_panel47, wxID_ANY, _("Add ..."), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    boxSizer118->Add(m_buttonAddReportDataSource, 0, wxALL, WXC_FROM_DIP(5));
    
    m_buttonRemoveReportDataSource = new wxButton(m_panel47, wxID_ANY, _("Remove ..."), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    boxSizer118->Add(m_buttonRemoveReportDataSource, 0, wxALL, WXC_FROM_DIP(5));
    
    gridSizer56 = new wxGridSizer(0, 4, 0, 0);
    
    boxSizer52->Add(gridSizer56, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_buttonViewReport = new wxButton(m_panel47, wxID_ANY, _("View"), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    gridSizer56->Add(m_buttonViewReport, 0, wxALL, WXC_FROM_DIP(5));
    
    m_buttonMakeReport = new wxButton(m_panel47, wxID_ANY, _("Make ..."), wxDefaultPosition, wxDLG_UNIT(m_panel47, wxSize(-1,-1)), 0);
    
    gridSizer56->Add(m_buttonMakeReport, 0, wxALL, WXC_FROM_DIP(5));
    
    m_panelMessages = new wxPanel(m_listbook11, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_listbook11, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    int m_panelMessagesImgIndex;
    m_panelMessagesImgIndex = m_listbook11_il->Add(wxXmlResource::Get()->LoadBitmap(wxT("gtk-dialog-info")));
    m_listbook11->AddPage(m_panelMessages, _("Messages"), false, m_panelMessagesImgIndex);
    
    boxSizer35 = new wxBoxSizer(wxVERTICAL);
    m_panelMessages->SetSizer(boxSizer35);
    
    wxArrayString m_listMessagesArr;
    m_listMessages = new wxListBox(m_panelMessages, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panelMessages, wxSize(-1,-1)), m_listMessagesArr, wxLB_SINGLE);
    
    boxSizer35->Add(m_listMessages, 4, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    gridSizer126 = new wxGridSizer(0, 2, 0, 0);
    
    boxSizer35->Add(gridSizer126, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_buttonClearMessages = new wxButton(m_panelMessages, wxID_ANY, _("Clear"), wxDefaultPosition, wxDLG_UNIT(m_panelMessages, wxSize(-1,-1)), 0);
    
    gridSizer126->Add(m_buttonClearMessages, 0, wxALL, WXC_FROM_DIP(5));
    
    m_panelDataSources = new wxPanel(m_listbook11, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_listbook11, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    int m_panelDataSourcesImgIndex;
    m_panelDataSourcesImgIndex = m_listbook11_il->Add(wxXmlResource::Get()->LoadBitmap(wxT("computer-laptop")));
    m_listbook11->AddPage(m_panelDataSources, _("Data Sources"), false, m_panelDataSourcesImgIndex);
    
    boxSizer92 = new wxBoxSizer(wxVERTICAL);
    m_panelDataSources->SetSizer(boxSizer92);
    
    m_dataSources = new wxDataViewCtrl(m_panelDataSources, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panelDataSources, wxSize(-1,-1)), wxDV_ROW_LINES|wxDV_SINGLE);
    
    m_dataSourcesModel = new m_dataSourceModel;
    m_dataSourcesModel->SetColCount( 4 );
    m_dataSources->AssociateModel(m_dataSourcesModel.get() );
    
    boxSizer92->Add(m_dataSources, 4, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_dataSources->AppendIconTextColumn(_("Source"), m_dataSources->GetColumnCount(), wxDATAVIEW_CELL_INERT, WXC_FROM_DIP(300), wxALIGN_LEFT);
    m_dataSources->AppendTextColumn(_("Alias"), m_dataSources->GetColumnCount(), wxDATAVIEW_CELL_INERT, WXC_FROM_DIP(300), wxALIGN_LEFT);
    m_dataSources->AppendToggleColumn(_("Use"), m_dataSources->GetColumnCount(), wxDATAVIEW_CELL_INERT, WXC_FROM_DIP(-2), wxALIGN_LEFT);
    {
        wxArrayString choices;
        choices.Add(_("Integer"));
        choices.Add(_("Float"));
        choices.Add(_("Bool"));
        choices.Add(_("OsMessage"));
        m_dataSources->AppendColumn( new wxDataViewColumn( _("Type"), new wxDataViewChoiceRenderer( choices, wxDATAVIEW_CELL_INERT, wxDVR_DEFAULT_ALIGNMENT), m_dataSources->GetColumnCount(), -2, wxALIGN_LEFT));
    }
    
    gridSizer96 = new wxGridSizer(0, 3, 0, 0);
    
    boxSizer92->Add(gridSizer96, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_buttonSubscriptions = new wxButton(m_panelDataSources, wxID_ANY, _("Subscriptions ..."), wxDefaultPosition, wxDLG_UNIT(m_panelDataSources, wxSize(-1,-1)), 0);
    
    gridSizer96->Add(m_buttonSubscriptions, 0, wxALL, WXC_FROM_DIP(5));
    
    m_menuBar21 = new wxMenuBar(0);
    this->SetMenuBar(m_menuBar21);
    
    m_menuFile = new wxMenu();
    m_menuBar21->Append(m_menuFile, _("&File"));
    
    m_menuItemOpen = new wxMenuItem(m_menuFile, wxID_ANY, _("Open ..."), wxT(""), wxITEM_NORMAL);
    m_menuFile->Append(m_menuItemOpen);
    
    m_menuItemSave = new wxMenuItem(m_menuFile, wxID_ANY, _("Save"), wxT(""), wxITEM_NORMAL);
    m_menuFile->Append(m_menuItemSave);
    
    m_menuItemSaveAs = new wxMenuItem(m_menuFile, wxID_ANY, _("Save As ..."), wxT(""), wxITEM_NORMAL);
    m_menuFile->Append(m_menuItemSaveAs);
    
    m_menuItemRestore = new wxMenuItem(m_menuFile, wxID_ANY, _("Restore"), wxT(""), wxITEM_NORMAL);
    m_menuFile->Append(m_menuItemRestore);
    
    m_menuItemSetup = new wxMenuItem(m_menuFile, wxID_ANY, _("Setup ..."), wxT(""), wxITEM_NORMAL);
    m_menuItemSetup->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("gear")));
    m_menuFile->Append(m_menuItemSetup);
    
    m_menuItemExit = new wxMenuItem(m_menuFile, wxID_ANY, _("Exit"), _("Exit Application"), wxITEM_NORMAL);
    m_menuItemExit->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("exit")));
    m_menuFile->Append(m_menuItemExit);
    
    
    #if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(m_listbook11)){
        wxPersistenceManager::Get().RegisterAndRestore(m_listbook11);
    } else {
        wxPersistenceManager::Get().Restore(m_listbook11);
    }
    #endif
    
    SetName(wxT("OpcClientMainFrameBase"));
    SetSize(1024,800);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
    // Connect events
    m_listReports->Connect(wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::onReportSelect), NULL, this);
    m_buttonNewReport->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onNewReport), NULL, this);
    m_buttonRemoveReport->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onRemoveReport), NULL, this);
    m_buttonAddReportDataSource->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onAddReportDataSource), NULL, this);
    m_buttonRemoveReportDataSource->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onRemoveReportDataSource), NULL, this);
    m_buttonViewReport->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onViewReport), NULL, this);
    m_buttonMakeReport->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onMakeReport), NULL, this);
    m_buttonClearMessages->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onClearMessages), NULL, this);
    this->Connect(m_menuItemOpen->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnOpen), NULL, this);
    this->Connect(m_menuItemSave->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSave), NULL, this);
    this->Connect(m_menuItemSaveAs->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSaveAs), NULL, this);
    this->Connect(m_menuItemRestore->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnRestore), NULL, this);
    this->Connect(m_menuItemSetup->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSetup), NULL, this);
    this->Connect(m_menuItemExit->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnExit), NULL, this);
    
}

OpcClientMainFrameBase::~OpcClientMainFrameBase()
{
    m_listReports->Disconnect(wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::onReportSelect), NULL, this);
    m_buttonNewReport->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onNewReport), NULL, this);
    m_buttonRemoveReport->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onRemoveReport), NULL, this);
    m_buttonAddReportDataSource->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onAddReportDataSource), NULL, this);
    m_buttonRemoveReportDataSource->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onRemoveReportDataSource), NULL, this);
    m_buttonViewReport->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onViewReport), NULL, this);
    m_buttonMakeReport->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onMakeReport), NULL, this);
    m_buttonClearMessages->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(OpcClientMainFrameBase::onClearMessages), NULL, this);
    this->Disconnect(m_menuItemOpen->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnOpen), NULL, this);
    this->Disconnect(m_menuItemSave->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSave), NULL, this);
    this->Disconnect(m_menuItemSaveAs->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSaveAs), NULL, this);
    this->Disconnect(m_menuItemRestore->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnRestore), NULL, this);
    this->Disconnect(m_menuItemSetup->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnSetup), NULL, this);
    this->Disconnect(m_menuItemExit->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(OpcClientMainFrameBase::OnExit), NULL, this);
    
}
